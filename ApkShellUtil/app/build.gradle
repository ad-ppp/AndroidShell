apply plugin: 'java'
apply plugin: 'application'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

sourceCompatibility = 1.7

def mainEntry = 'com.jack.apkshell.util.AndShell'
// 执行jar这个task时，将所有的依赖全部解压出来，跳过特定文件名的文件。
jar {
    manifestContentCharset 'utf-8'
    metadataCharset 'utf-8'

    manifest {
        attributes 'Main-Class': "${mainEntry}"
        attributes 'Manifest-Version': '1.0.1'
    }
    from {
//        if (project.properties.containsKey("allInOne")) {
//            configurations.compile.collect {
//                println "compile it path: ${it.getAbsolutePath()}"
//                it.isDirectory() ? it : zipTree(it)
//            }
//            configurations.runtime.collect {
//                println "runtime it path: ${it.getAbsolutePath()}"
//                it.isDirectory() ? it : zipTree(it)
//            }

//        exclude('LICENSE.txt', 'NOTICE.txt', 'rootdoc.txt')
//        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
//        exclude 'META-INF/NOTICE', 'META-INF/NOTICE.txt'
//        exclude 'META-INF/LICENSE', 'META-INF/LICENSE.txt'
//        exclude 'META-INF/DEPENDENCIES'
//        }
    }

    println 'task[jar]'

    doLast {
        println 'doLast task[jar]'
        backupBuildLibFile()
    }
}

// 备份生成的 helloAndroid.jar
def backupBuildLibFile() {
    copy {
        println "doLast copy from ${project.projectDir}/build/libs/andShellUtil.jar to ${project.projectDir}/gen/"

        from "${project.projectDir}/build/libs/andShellUtil.jar"
        into "${project.projectDir}/gen/"
    }
}
